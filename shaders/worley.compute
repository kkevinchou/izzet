#version 430 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(std430, binding = 0) buffer MyBuffer
{
    float data[];
};
layout(rgba32f, binding = 1) uniform image3D imgOutput;

void main()
{
    ivec3 texelCoord = ivec3(gl_GlobalInvocationID.xyz);

    vec4 color = vec4(0.0, 0.0, 0.0, 1.0);

    color.x = float(texelCoord.x) / (gl_NumWorkGroups.x);
    color.y = float(texelCoord.y) / (gl_NumWorkGroups.y);
    color.z = float(texelCoord.z) / (gl_NumWorkGroups.z);

    // color.x = float(texelCoord.z) / (gl_NumWorkGroups.z);
    // color.y = float(texelCoord.z) / (gl_NumWorkGroups.z);
    // color.z = float(texelCoord.z) / (gl_NumWorkGroups.z);

    imageStore(imgOutput, texelCoord, color);
}